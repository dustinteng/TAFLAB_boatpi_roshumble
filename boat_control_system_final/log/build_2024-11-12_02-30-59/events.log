[0.000000] (-) TimerEvent: {}
[0.001760] (boat_control_system_final) JobQueued: {'identifier': 'boat_control_system_final', 'dependencies': OrderedDict()}
[0.002473] (boat_control_system_final) JobStarted: {'identifier': 'boat_control_system_final'}
[0.051515] (boat_control_system_final) JobProgress: {'identifier': 'boat_control_system_final', 'progress': 'cmake'}
[0.055490] (boat_control_system_final) JobProgress: {'identifier': 'boat_control_system_final', 'progress': 'build'}
[0.059353] (boat_control_system_final) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/boat/Desktop/src/boat_control_system_final/build/boat_control_system_final', '--', '-j4', '-l4'], 'cwd': '/home/boat/Desktop/src/boat_control_system_final/build/boat_control_system_final', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'boat'), ('SSH_CLIENT', '10.136.128.231 56713 22'), ('XDG_SESSION_TYPE', 'tty'), ('GIT_ASKPASS', '/home/boat/.vscode-server/cli/servers/Stable-e8653663e8840adaf45af01eab5c627a5af81807/server/extensions/git/dist/askpass.sh'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/aarch64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/home/boat/.vscode-server/cli/servers/Stable-e8653663e8840adaf45af01eab5c627a5af81807/server/bin/helpers/browser.sh'), ('MOTD_SHOWN', 'pam'), ('HOME', '/home/boat'), ('TERM_PROGRAM_VERSION', '1.95.2'), ('VSCODE_IPC_HOOK_CLI', '/run/user/1000/vscode-ipc-e1156e86-b755-4fab-9937-a89aa8c9bb16.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/home/boat/.vscode-server/cli/servers/Stable-e8653663e8840adaf45af01eab5c627a5af81807/server/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/home/boat/.vscode-server/cli/servers/Stable-e8653663e8840adaf45af01eab5c627a5af81807/server/node'), ('SSL_CERT_FILE', '/usr/lib/ssl/certs/ca-certificates.crt'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'boat'), ('_', '/home/boat/.local/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '5'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/home/boat/.vscode-server/cli/servers/Stable-e8653663e8840adaf45af01eab5c627a5af81807/server/bin/remote-cli:/home/boat/.local/bin:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/boat/.local/bin:/home/boat/.local/bin:/home/boat/.local/bin:/home/boat/.local/bin'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('SSL_CERT_DIR', '/usr/lib/ssl/certs'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-15c79811d2.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/boat/Desktop/src/boat_control_system_final/build/boat_control_system_final'), ('LC_ALL', 'en_US.UTF-8'), ('SSH_CONNECTION', '10.136.128.231 56713 10.41.221.43 22'), ('XDG_DATA_DIRS', '/usr/share/gnome:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.098939] (-) TimerEvent: {}
[0.199819] (-) TimerEvent: {}
[0.301154] (-) TimerEvent: {}
[0.345751] (boat_control_system_final) StdoutLine: {'line': b'[ 16%] Built target WaypointQueue\n'}
[0.357458] (boat_control_system_final) StdoutLine: {'line': b'[ 33%] Built target CoordinateCalculations\n'}
[0.401416] (-) TimerEvent: {}
[0.432657] (boat_control_system_final) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target RudderServoControlNode\x1b[0m\n'}
[0.489122] (boat_control_system_final) StdoutLine: {'line': b'[ 50%] Built target CoordinateCalculationsNodeLib\n'}
[0.501633] (-) TimerEvent: {}
[0.511808] (boat_control_system_final) StdoutLine: {'line': b'[ 66%] Built target WaypointQueueNode\n'}
[0.546141] (boat_control_system_final) StdoutLine: {'line': b'[ 75%] \x1b[32mBuilding CXX object CMakeFiles/RudderServoControlNode.dir/src/RudderServoControlNode.cpp.o\x1b[0m\n'}
[0.601872] (-) TimerEvent: {}
[0.628952] (boat_control_system_final) StdoutLine: {'line': b'[ 91%] Built target CoordinateCalculationsNodeExec\n'}
[0.702237] (-) TimerEvent: {}
[0.803240] (-) TimerEvent: {}
[0.904115] (-) TimerEvent: {}
[1.004985] (-) TimerEvent: {}
[1.105748] (-) TimerEvent: {}
[1.206485] (-) TimerEvent: {}
[1.307241] (-) TimerEvent: {}
[1.408084] (-) TimerEvent: {}
[1.508894] (-) TimerEvent: {}
[1.609688] (-) TimerEvent: {}
[1.710446] (-) TimerEvent: {}
[1.811177] (-) TimerEvent: {}
[1.911902] (-) TimerEvent: {}
[2.012716] (-) TimerEvent: {}
[2.113469] (-) TimerEvent: {}
[2.214216] (-) TimerEvent: {}
[2.314942] (-) TimerEvent: {}
[2.415718] (-) TimerEvent: {}
[2.516602] (-) TimerEvent: {}
[2.617376] (-) TimerEvent: {}
[2.718174] (-) TimerEvent: {}
[2.818988] (-) TimerEvent: {}
[2.919935] (-) TimerEvent: {}
[3.020808] (-) TimerEvent: {}
[3.121648] (-) TimerEvent: {}
[3.222466] (-) TimerEvent: {}
[3.323412] (-) TimerEvent: {}
[3.424398] (-) TimerEvent: {}
[3.525291] (-) TimerEvent: {}
[3.626280] (-) TimerEvent: {}
[3.727165] (-) TimerEvent: {}
[3.828197] (-) TimerEvent: {}
[3.929118] (-) TimerEvent: {}
[4.030186] (-) TimerEvent: {}
[4.131185] (-) TimerEvent: {}
[4.232176] (-) TimerEvent: {}
[4.333095] (-) TimerEvent: {}
[4.434043] (-) TimerEvent: {}
[4.535048] (-) TimerEvent: {}
[4.636520] (-) TimerEvent: {}
[4.737337] (-) TimerEvent: {}
[4.838189] (-) TimerEvent: {}
[4.939077] (-) TimerEvent: {}
[5.039964] (-) TimerEvent: {}
[5.140836] (-) TimerEvent: {}
[5.241740] (-) TimerEvent: {}
[5.342660] (-) TimerEvent: {}
[5.443468] (-) TimerEvent: {}
[5.544365] (-) TimerEvent: {}
[5.645190] (-) TimerEvent: {}
[5.746038] (-) TimerEvent: {}
[5.846880] (-) TimerEvent: {}
[5.947732] (-) TimerEvent: {}
[6.048800] (-) TimerEvent: {}
[6.149645] (-) TimerEvent: {}
[6.250640] (-) TimerEvent: {}
[6.351477] (-) TimerEvent: {}
[6.452352] (-) TimerEvent: {}
[6.553192] (-) TimerEvent: {}
[6.654075] (-) TimerEvent: {}
[6.754918] (-) TimerEvent: {}
[6.855727] (-) TimerEvent: {}
[6.956632] (-) TimerEvent: {}
[7.057578] (-) TimerEvent: {}
[7.158397] (-) TimerEvent: {}
[7.259228] (-) TimerEvent: {}
[7.360119] (-) TimerEvent: {}
[7.460932] (-) TimerEvent: {}
[7.561799] (-) TimerEvent: {}
[7.662760] (-) TimerEvent: {}
[7.763614] (-) TimerEvent: {}
[7.864458] (-) TimerEvent: {}
[7.965739] (-) TimerEvent: {}
[8.066580] (-) TimerEvent: {}
[8.167427] (-) TimerEvent: {}
[8.268307] (-) TimerEvent: {}
[8.369333] (-) TimerEvent: {}
[8.470182] (-) TimerEvent: {}
[8.571056] (-) TimerEvent: {}
[8.671906] (-) TimerEvent: {}
[8.772839] (-) TimerEvent: {}
[8.873663] (-) TimerEvent: {}
[8.974567] (-) TimerEvent: {}
[9.075466] (-) TimerEvent: {}
[9.176388] (-) TimerEvent: {}
[9.277236] (-) TimerEvent: {}
[9.378068] (-) TimerEvent: {}
[9.478914] (-) TimerEvent: {}
[9.579823] (-) TimerEvent: {}
[9.680706] (-) TimerEvent: {}
[9.781557] (-) TimerEvent: {}
[9.882535] (-) TimerEvent: {}
[9.983440] (-) TimerEvent: {}
[10.084330] (-) TimerEvent: {}
[10.185160] (-) TimerEvent: {}
[10.286018] (-) TimerEvent: {}
[10.386847] (-) TimerEvent: {}
[10.487675] (-) TimerEvent: {}
[10.588558] (-) TimerEvent: {}
[10.689375] (-) TimerEvent: {}
[10.790184] (-) TimerEvent: {}
[10.891063] (-) TimerEvent: {}
[10.991953] (-) TimerEvent: {}
[11.092895] (-) TimerEvent: {}
[11.193743] (-) TimerEvent: {}
[11.294590] (-) TimerEvent: {}
[11.395493] (-) TimerEvent: {}
[11.496341] (-) TimerEvent: {}
[11.597179] (-) TimerEvent: {}
[11.698004] (-) TimerEvent: {}
[11.798889] (-) TimerEvent: {}
[11.861642] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:16\x1b[m\x1b[K:\n'}
[11.862609] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/RudderServoControlNode.hpp:42:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[11.863155] (boat_control_system_final) StderrLine: {'line': b'   42 |     std_msgs::msg::Float32 \x1b[01;31m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K::get_magnetometer_heading();\n'}
[11.863654] (boat_control_system_final) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.864263] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/RudderServoControlNode.hpp:43:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[11.864824] (boat_control_system_final) StderrLine: {'line': b'   43 |     sensor_msgs::msg::NavSatFix \x1b[01;31m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K::get_curr_pos();\n'}
[11.865332] (boat_control_system_final) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.865786] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/RudderServoControlNode.hpp:44:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[11.866260] (boat_control_system_final) StderrLine: {'line': b'   44 |     std_msgs::msg::Float32 \x1b[01;31m\x1b[KCoordinateCalculationsNode\x1b[m\x1b[K::get_wind_angle();\n'}
[11.866736] (boat_control_system_final) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.899098] (-) TimerEvent: {}
[12.000031] (-) TimerEvent: {}
[12.100883] (-) TimerEvent: {}
[12.201868] (-) TimerEvent: {}
[12.302694] (-) TimerEvent: {}
[12.403543] (-) TimerEvent: {}
[12.504410] (-) TimerEvent: {}
[12.605199] (-) TimerEvent: {}
[12.686044] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KRudderServoControlNode::RudderServoControlNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[12.687052] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:46:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwind_subscriber_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kgps_subscriber_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[12.687697] (boat_control_system_final) StderrLine: {'line': b'   46 |     \x1b[01;31m\x1b[Kwind_subscriber_\x1b[m\x1b[K = this->create_subscription<std_msgs::msg::Float32>(\n'}
[12.688287] (boat_control_system_final) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.688797] (boat_control_system_final) StderrLine: {'line': b'      |     \x1b[32m\x1b[Kgps_subscriber_\x1b[m\x1b[K\n'}
[12.689249] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:49:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid CoordinateCalculationsNode::windCallback(std_msgs::msg::Float32_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[12.689722] (boat_control_system_final) StderrLine: {'line': b'   49 |         std::bind(&CoordinateCalculationsNode::\x1b[01;31m\x1b[KwindCallback\x1b[m\x1b[K, this, std::placeholders::_1));\n'}
[12.690205] (boat_control_system_final) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.690651] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/Coordinate_Calculations.h:12\x1b[m\x1b[K,\n'}
[12.691117] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:17\x1b[m\x1b[K:\n'}
[12.691576] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/CoordinateCalculationsNode.hpp:73:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[12.692031] (boat_control_system_final) StderrLine: {'line': b'   73 |     void \x1b[01;36m\x1b[KwindCallback\x1b[m\x1b[K(const std_msgs::msg::Float32::SharedPtr msg);\n'}
[12.692635] (boat_control_system_final) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.705419] (-) TimerEvent: {}
[12.775679] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RudderServoControlNode::turnBoat(sensor_msgs::msg::NavSatFix)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[12.776511] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:134:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.777071] (boat_control_system_final) StderrLine: {'line': b'  134 |         \x1b[01;31m\x1b[Kif\x1b[m\x1b[K (abs(turn_angle) <= 1.0f) {\n'}
[12.777566] (boat_control_system_final) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[12.778835] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:157:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kfloat\x1b[m\x1b[K\xe2\x80\x99 in initialization\n'}
[12.779545] (boat_control_system_final) StderrLine: {'line': b'  157 |         float current_heading = \x1b[01;31m\x1b[Kget_magnetometer_heading()\x1b[m\x1b[K;\n'}
[12.780038] (boat_control_system_final) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[12.780727] (boat_control_system_final) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[12.781179] (boat_control_system_final) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[Kstd_msgs::msg::Float32 {aka std_msgs::msg::Float32_<std::allocator<void> >}\x1b[m\x1b[K\n'}
[12.805622] (-) TimerEvent: {}
[12.821689] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RudderServoControlNode::executeWaypoints()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[12.822598] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:177:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KcalculateDistance\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[12.823238] (boat_control_system_final) StderrLine: {'line': b'  177 |             if (\x1b[01;31m\x1b[KcalculateDistance\x1b[m\x1b[K(curr_position, latest_waypoint_data_) <= 0.05)\n'}
[12.823842] (boat_control_system_final) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.824448] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:179:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kfloat\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.824999] (boat_control_system_final) StderrLine: {'line': b'  179 |                 setRudderServo(\x1b[01;31m\x1b[Kget_wind_angle()\x1b[m\x1b[K);  // Set rudder to idle if near the destination\n'}
[12.825504] (boat_control_system_final) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[12.825996] (boat_control_system_final) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[12.826503] (boat_control_system_final) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[Kstd_msgs::msg::Float32 {aka std_msgs::msg::Float32_<std::allocator<void> >}\x1b[m\x1b[K\n'}
[12.827039] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:16\x1b[m\x1b[K:\n'}
[12.827595] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/RudderServoControlNode.hpp:38:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid RudderServoControlNode::setRudderServo(float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.828189] (boat_control_system_final) StderrLine: {'line': b'   38 |     void setRudderServo(\x1b[01;36m\x1b[Kfloat angle\x1b[m\x1b[K);\n'}
[12.828856] (boat_control_system_final) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[12.862144] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:194:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KcalculateDistance\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[12.862844] (boat_control_system_final) StderrLine: {'line': b'  194 |             while (\x1b[01;31m\x1b[KcalculateDistance\x1b[m\x1b[K(get_curr_pos(), next_waypoint) > 0.05)\n'}
[12.863363] (boat_control_system_final) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.905812] (-) TimerEvent: {}
[13.006677] (-) TimerEvent: {}
[13.107498] (-) TimerEvent: {}
[13.208386] (-) TimerEvent: {}
[13.309208] (-) TimerEvent: {}
[13.410040] (-) TimerEvent: {}
[13.510898] (-) TimerEvent: {}
[13.611744] (-) TimerEvent: {}
[13.712971] (-) TimerEvent: {}
[13.813836] (-) TimerEvent: {}
[13.914642] (-) TimerEvent: {}
[14.016722] (-) TimerEvent: {}
[14.117660] (-) TimerEvent: {}
[14.218541] (-) TimerEvent: {}
[14.319420] (-) TimerEvent: {}
[14.420240] (-) TimerEvent: {}
[14.521038] (-) TimerEvent: {}
[14.621863] (-) TimerEvent: {}
[14.722686] (-) TimerEvent: {}
[14.823526] (-) TimerEvent: {}
[14.924455] (-) TimerEvent: {}
[15.025290] (-) TimerEvent: {}
[15.126175] (-) TimerEvent: {}
[15.227066] (-) TimerEvent: {}
[15.327940] (-) TimerEvent: {}
[15.356465] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[15.357826] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[15.358393] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[15.359337] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[15.360614] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[15.361965] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[15.362547] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[15.363082] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[15.363568] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[15.364155] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[15.364712] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/include/boat_control_system_final/RudderServoControlNode.hpp:9\x1b[m\x1b[K,\n'}
[15.365202] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:16\x1b[m\x1b[K:\n'}
[15.365710] (boat_control_system_final) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[15.366257] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.366895] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.367453] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.368030] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.368821] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:46:73:\x1b[m\x1b[K   required from here\n'}
[15.369321] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>::function(std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.369782] (boat_control_system_final) StderrLine: {'line': b'  391 |       set_deprecated(\x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K);\n'}
[15.370261] (boat_control_system_final) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[15.370727] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[15.371193] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[15.371669] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[15.372198] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/detail/string__struct.hpp:8\x1b[m\x1b[K,\n'}
[15.372723] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/string.hpp:7\x1b[m\x1b[K,\n'}
[15.373185] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:6\x1b[m\x1b[K:\n'}
[15.373695] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.374145] (boat_control_system_final) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[15.374606] (boat_control_system_final) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[15.375055] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[15.375534] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[15.376017] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[15.376584] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[15.377049] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:60\x1b[m\x1b[K,\n'}
[15.377614] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/detail/string__struct.hpp:8\x1b[m\x1b[K,\n'}
[15.378108] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/string.hpp:7\x1b[m\x1b[K,\n'}
[15.378627] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:6\x1b[m\x1b[K:\n'}
[15.379090] (boat_control_system_final) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[15.379644] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>::_Callable<std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>&, std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>&, std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.380357] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.380889] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.381503] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.382209] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.382859] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.383682] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:46:73:\x1b[m\x1b[K   required from here\n'}
[15.384262] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.384843] (boat_control_system_final) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[15.385317] (boat_control_system_final) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[15.385777] (boat_control_system_final) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[15.386222] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[15.386699] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[15.387167] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/detail/string__struct.hpp:8\x1b[m\x1b[K,\n'}
[15.387633] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/std_msgs/std_msgs/msg/string.hpp:7\x1b[m\x1b[K,\n'}
[15.388151] (boat_control_system_final) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:6\x1b[m\x1b[K:\n'}
[15.388718] (boat_control_system_final) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[15.389271] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.389940] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.390740] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.391250] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.391822] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/home/boat/Desktop/src/boat_control_system_final/src/RudderServoControlNode.cpp:46:73:\x1b[m\x1b[K   required from here\n'}
[15.392393] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.392882] (boat_control_system_final) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[15.393391] (boat_control_system_final) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[15.393861] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.394464] (boat_control_system_final) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[15.394938] (boat_control_system_final) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[15.395463] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.395979] (boat_control_system_final) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[15.396639] (boat_control_system_final) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[15.397167] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.397663] (boat_control_system_final) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[15.398192] (boat_control_system_final) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[15.398649] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.399122] (boat_control_system_final) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[15.399578] (boat_control_system_final) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[15.400088] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (CoordinateCalculationsNode::*(RudderServoControlNode*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.400640] (boat_control_system_final) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[15.401118] (boat_control_system_final) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[15.401566] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[15.402091] (boat_control_system_final) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[15.402583] (boat_control_system_final) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[15.403153] (boat_control_system_final) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[15.428220] (-) TimerEvent: {}
[15.529081] (-) TimerEvent: {}
[15.629888] (-) TimerEvent: {}
[15.730717] (-) TimerEvent: {}
[15.831578] (-) TimerEvent: {}
[15.932449] (-) TimerEvent: {}
[16.033263] (-) TimerEvent: {}
[16.134087] (-) TimerEvent: {}
[16.235080] (-) TimerEvent: {}
[16.335905] (-) TimerEvent: {}
[16.436737] (-) TimerEvent: {}
[16.537554] (-) TimerEvent: {}
[16.638366] (-) TimerEvent: {}
[16.739214] (-) TimerEvent: {}
[16.840134] (-) TimerEvent: {}
[16.940949] (-) TimerEvent: {}
[17.041785] (-) TimerEvent: {}
[17.142658] (-) TimerEvent: {}
[17.243500] (-) TimerEvent: {}
[17.344354] (-) TimerEvent: {}
[17.445256] (-) TimerEvent: {}
[17.546049] (-) TimerEvent: {}
[17.646954] (-) TimerEvent: {}
[17.747936] (-) TimerEvent: {}
[17.849025] (-) TimerEvent: {}
[17.949835] (-) TimerEvent: {}
[18.050661] (-) TimerEvent: {}
[18.151484] (-) TimerEvent: {}
[18.252318] (-) TimerEvent: {}
[18.353123] (-) TimerEvent: {}
[18.453988] (-) TimerEvent: {}
[18.554832] (-) TimerEvent: {}
[18.655716] (-) TimerEvent: {}
[18.756663] (-) TimerEvent: {}
[18.858080] (-) TimerEvent: {}
[18.958975] (-) TimerEvent: {}
[19.059857] (-) TimerEvent: {}
[19.160729] (-) TimerEvent: {}
[19.261606] (-) TimerEvent: {}
[19.362445] (-) TimerEvent: {}
[19.463268] (-) TimerEvent: {}
[19.564146] (-) TimerEvent: {}
[19.664964] (-) TimerEvent: {}
[19.765836] (-) TimerEvent: {}
[19.867029] (-) TimerEvent: {}
[19.967863] (-) TimerEvent: {}
[20.068770] (-) TimerEvent: {}
[20.169599] (-) TimerEvent: {}
[20.270503] (-) TimerEvent: {}
[20.371381] (-) TimerEvent: {}
[20.472254] (-) TimerEvent: {}
[20.573134] (-) TimerEvent: {}
[20.673987] (-) TimerEvent: {}
[20.774852] (-) TimerEvent: {}
[20.875661] (-) TimerEvent: {}
[20.976581] (-) TimerEvent: {}
[21.077399] (-) TimerEvent: {}
[21.178214] (-) TimerEvent: {}
[21.279140] (-) TimerEvent: {}
[21.379987] (-) TimerEvent: {}
[21.480859] (-) TimerEvent: {}
[21.581670] (-) TimerEvent: {}
[21.682466] (-) TimerEvent: {}
[21.783331] (-) TimerEvent: {}
[21.884229] (-) TimerEvent: {}
[21.985015] (-) TimerEvent: {}
[22.085813] (-) TimerEvent: {}
[22.186625] (-) TimerEvent: {}
[22.287463] (-) TimerEvent: {}
[22.388373] (-) TimerEvent: {}
[22.489166] (-) TimerEvent: {}
[22.589980] (-) TimerEvent: {}
[22.690779] (-) TimerEvent: {}
[22.791631] (-) TimerEvent: {}
[22.892524] (-) TimerEvent: {}
[22.993338] (-) TimerEvent: {}
[23.094170] (-) TimerEvent: {}
[23.195038] (-) TimerEvent: {}
[23.295946] (-) TimerEvent: {}
[23.396803] (-) TimerEvent: {}
[23.497605] (-) TimerEvent: {}
[23.598469] (-) TimerEvent: {}
[23.699326] (-) TimerEvent: {}
[23.800183] (-) TimerEvent: {}
[23.901051] (-) TimerEvent: {}
[24.001872] (-) TimerEvent: {}
[24.102708] (-) TimerEvent: {}
[24.203622] (-) TimerEvent: {}
[24.304482] (-) TimerEvent: {}
[24.405302] (-) TimerEvent: {}
[24.506103] (-) TimerEvent: {}
[24.606918] (-) TimerEvent: {}
[24.707783] (-) TimerEvent: {}
[24.808709] (-) TimerEvent: {}
[24.909548] (-) TimerEvent: {}
[25.010343] (-) TimerEvent: {}
[25.111174] (-) TimerEvent: {}
[25.212026] (-) TimerEvent: {}
[25.312878] (-) TimerEvent: {}
[25.413695] (-) TimerEvent: {}
[25.514456] (-) TimerEvent: {}
[25.615324] (-) TimerEvent: {}
[25.716170] (-) TimerEvent: {}
[25.816996] (-) TimerEvent: {}
[25.917836] (-) TimerEvent: {}
[26.018645] (-) TimerEvent: {}
[26.119524] (-) TimerEvent: {}
[26.220380] (-) TimerEvent: {}
[26.321190] (-) TimerEvent: {}
[26.422024] (-) TimerEvent: {}
[26.522895] (-) TimerEvent: {}
[26.623717] (-) TimerEvent: {}
[26.724561] (-) TimerEvent: {}
[26.825373] (-) TimerEvent: {}
[26.926194] (-) TimerEvent: {}
[27.026987] (-) TimerEvent: {}
[27.127726] (-) TimerEvent: {}
[27.228523] (-) TimerEvent: {}
[27.329283] (-) TimerEvent: {}
[27.430025] (-) TimerEvent: {}
[27.530798] (-) TimerEvent: {}
[27.631556] (-) TimerEvent: {}
[27.732320] (-) TimerEvent: {}
[27.833128] (-) TimerEvent: {}
[27.933866] (-) TimerEvent: {}
[28.034694] (-) TimerEvent: {}
[28.135516] (-) TimerEvent: {}
[28.236429] (-) TimerEvent: {}
[28.337259] (-) TimerEvent: {}
[28.438081] (-) TimerEvent: {}
[28.539010] (-) TimerEvent: {}
[28.639868] (-) TimerEvent: {}
[28.740757] (-) TimerEvent: {}
[28.841629] (-) TimerEvent: {}
[28.942519] (-) TimerEvent: {}
[29.043424] (-) TimerEvent: {}
[29.144793] (-) TimerEvent: {}
[29.245639] (-) TimerEvent: {}
[29.346580] (-) TimerEvent: {}
[29.447481] (-) TimerEvent: {}
[29.548908] (-) TimerEvent: {}
[29.585859] (boat_control_system_final) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/RudderServoControlNode.dir/build.make:76: CMakeFiles/RudderServoControlNode.dir/src/RudderServoControlNode.cpp.o] Error 1\n'}
[29.586960] (boat_control_system_final) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/RudderServoControlNode.dir/all] Error 2\n'}
[29.588028] (boat_control_system_final) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[29.595168] (boat_control_system_final) CommandEnded: {'returncode': 2}
[29.649125] (-) TimerEvent: {}
[29.750455] (-) TimerEvent: {}
[29.851216] (-) TimerEvent: {}
[29.886588] (boat_control_system_final) JobEnded: {'identifier': 'boat_control_system_final', 'rc': 2}
[29.900920] (-) EventReactorShutdown: {}
